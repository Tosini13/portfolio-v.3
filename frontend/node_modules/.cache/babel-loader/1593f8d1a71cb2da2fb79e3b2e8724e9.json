{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/form.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, Dialog, DialogTitle, Grid, TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport AddLogo from \"../../global/AddLogo\";\nimport { StoreTechnologiesContext } from \"../../../store/technology\";\nconst GridContainerStyled = styled(Grid)`\n  padding: 10px;\n`;\nconst GridItemStyled = styled(Grid)`\n  margin-bottom: 10px;\n`;\n\nconst TechnologyForm = ({\n  handleClose,\n  open,\n  technology\n}) => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const {\n    add,\n    update\n  } = technologiesStore;\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => {\n    add({\n      name: values.name,\n      description: values.description\n    });\n    handleClose();\n  };\n\n  const [image, setImage] = useState();\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Add Technology\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridContainerStyled, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"space-evenly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItemStyled, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddLogo, {\n    image: image,\n    setImage: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(GridItemStyled, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Name\",\n    value: technology ? technology.name : \"\",\n    inputProps: {\n      name: \"name\",\n      ref: register({\n        required: \"Required\",\n        maxLength: 255,\n        minLength: 2\n      })\n    },\n    helperText: errors.name && \"Title must have at least 2 signs!\",\n    error: Boolean(errors.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(GridItemStyled, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Desription\",\n    value: technology ? technology.description : \"\",\n    multiline: true,\n    inputProps: {\n      name: \"description\",\n      ref: register({\n        maxLength: 255\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(GridItemStyled, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"ADD\")))));\n};\n\nexport default TechnologyForm;","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/form.tsx"],"names":["React","useContext","useState","useForm","Button","Dialog","DialogTitle","Grid","TextField","styled","AddLogo","StoreTechnologiesContext","GridContainerStyled","GridItemStyled","TechnologyForm","handleClose","open","technology","technologiesStore","add","update","handleSubmit","register","errors","onSubmit","values","name","description","image","setImage","ref","required","maxLength","minLength","Boolean"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport AddLogo from \"../../global/AddLogo\";\nimport {\n  StoreTechnologiesContext,\n  Technology,\n} from \"../../../store/technology\";\n\nconst GridContainerStyled = styled(Grid)`\n  padding: 10px;\n`;\n\nconst GridItemStyled = styled(Grid)`\n  margin-bottom: 10px;\n`;\n\nexport interface TechnologyFormProps {\n  handleClose: () => void;\n  open: boolean;\n  technology?: Technology;\n}\n\nconst TechnologyForm: React.FC<TechnologyFormProps> = ({\n  handleClose,\n  open,\n  technology,\n}) => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const { add, update } = technologiesStore;\n\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = (values: any) => {\n    add({ name: values.name, description: values.description });\n    handleClose();\n  };\n\n  const [image, setImage] = useState<any>();\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle>Add Technology</DialogTitle>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <GridContainerStyled\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"space-evenly\"\n        >\n          <GridItemStyled item>\n            <AddLogo image={image} setImage={setImage} />\n          </GridItemStyled>\n          <GridItemStyled item>\n            <TextField\n              label=\"Name\"\n              value={technology ? technology.name : \"\"}\n              inputProps={{\n                name: \"name\",\n                ref: register({\n                  required: \"Required\",\n                  maxLength: 255,\n                  minLength: 2,\n                }),\n              }}\n              helperText={errors.name && \"Title must have at least 2 signs!\"}\n              error={Boolean(errors.name)}\n            />\n          </GridItemStyled>\n          <GridItemStyled item>\n            <TextField\n              label=\"Desription\"\n              value={technology ? technology.description : \"\"}\n              multiline\n              inputProps={{\n                name: \"description\",\n                ref: register({\n                  maxLength: 255,\n                }),\n              }}\n            />\n          </GridItemStyled>\n          <GridItemStyled item>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              ADD\n            </Button>\n          </GridItemStyled>\n        </GridContainerStyled>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TechnologyForm;\n"]},"metadata":{},"sourceType":"module"}