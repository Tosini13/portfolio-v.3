{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { decorate, action, observable } from \"mobx\";\nconst apiUrl = \"http://localhost:1300/api\";\n\nclass Technology {\n  constructor({\n    _id,\n    name,\n    description\n  }) {\n    this.id = void 0;\n    this.name = void 0;\n    this.description = void 0;\n    this.id = _id;\n    this.name = name;\n    this.description = description;\n  }\n\n}\n\ndecorate(Technology, {\n  name: observable,\n  description: observable\n});\n\nclass TechnologiesStore {\n  constructor() {\n    this.technologies = [];\n\n    this.fetch = async () => {\n      const data = await axios.get(`${apiUrl}/technologies`);\n      const technology = data.data;\n      this.technologies = technology.map(tech => new Technology({\n        _id: tech._id,\n        name: tech.name,\n        description: tech.description\n      }));\n    };\n\n    this.add = async technology => {\n      console.log(JSON.stringify(technology));\n      const data = await axios.post(`${apiUrl}/technologies`, {\n        name: technology.name,\n        description: technology.description\n      });\n      this.technologies = [...this.technologies, new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description\n      })];\n    };\n\n    this.delet = async techId => {\n      console.log(JSON.stringify(technology));\n      const data = await axios.post(`${apiUrl}/technologies`, {\n        name: technology.name,\n        description: technology.description\n      });\n      this.technologies = [...this.technologies, new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description\n      })];\n    };\n  }\n\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action\n});\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StoreTechnologiesContext.Provider, {\n    value: storeTechnologies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx"],"names":["React","axios","decorate","action","observable","apiUrl","Technology","constructor","_id","name","description","id","TechnologiesStore","technologies","fetch","data","get","technology","map","tech","add","console","log","JSON","stringify","post","delet","techId","storeTechnologies","StoreTechnologiesContext","createContext","StoreTechnologiesProvider","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport { decorate, action, observable } from \"mobx\";\n\nconst apiUrl = \"http://localhost:1300/api\";\n\ntype Id = string;\n\ntype TechnologyType = {\n  _id: string;\n  name: string;\n  description?: string;\n};\n\ntype TechnologyCreationType = Omit<Technology, \"id\">;\n\nclass Technology {\n  id: string;\n  name: string;\n  description?: string;\n\n  constructor({ _id, name, description }: TechnologyType) {\n    this.id = _id;\n    this.name = name;\n    this.description = description;\n  }\n}\n\ndecorate(Technology, {\n  name: observable,\n  description: observable,\n});\n\nclass TechnologiesStore {\n  technologies: Technology[] = [];\n\n  fetch = async () => {\n    const data = await axios.get(`${apiUrl}/technologies`);\n    const technology = data.data;\n    this.technologies = technology.map(\n      (tech: any) =>\n        new Technology({\n          _id: tech._id,\n          name: tech.name,\n          description: tech.description,\n        })\n    );\n  };\n\n  add = async (technology: TechnologyCreationType) => {\n    console.log(JSON.stringify(technology));\n    const data = await axios.post<TechnologyType>(`${apiUrl}/technologies`, {\n      name: technology.name,\n      description: technology.description,\n    });\n    this.technologies = [\n      ...this.technologies,\n      new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description,\n      }),\n    ];\n  };\n\n  delet = async (techId: Id) => {\n    console.log(JSON.stringify(technology));\n    const data = await axios.post<TechnologyType>(`${apiUrl}/technologies`, {\n      name: technology.name,\n      description: technology.description,\n    });\n    this.technologies = [\n      ...this.technologies,\n      new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description,\n      }),\n    ];\n  };\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action,\n});\n\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider: React.FC<{}> = ({ children }) => {\n  return (\n    <StoreTechnologiesContext.Provider value={storeTechnologies}>\n      {children}\n    </StoreTechnologiesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}