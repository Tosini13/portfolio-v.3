{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid } from \"@material-ui/core\";\nimport { StoreTechnologiesContext } from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport TechnologyForm from \"./form\";\nimport TechnologyDetails from \"./TechnologyDetails\";\nexport let ViewTechnologies;\n\n(function (ViewTechnologies) {\n  ViewTechnologies[\"column\"] = \"column\";\n  ViewTechnologies[\"row\"] = \"row\";\n})(ViewTechnologies || (ViewTechnologies = {}));\n\nconst Technologies = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const {\n    technologies,\n    fetch,\n    remove\n  } = technologiesStore;\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n  const [edit, setEdit] = useState();\n  const [action, setAction] = useState(false);\n  const [view, setView] = useState(ViewTechnologies.column);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setEdit(false);\n  };\n\n  const handleOpen = technology => {\n    setEdit(technology ? technology : true);\n  };\n\n  const actions = [{\n    icon: /*#__PURE__*/React.createElement(AddIcon, {\n      onClick: () => handleOpen(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }),\n    name: \"Add\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      onClick: handleActivate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }),\n    name: \"Edit\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(ViewStreamIcon, {\n      onClick: () => setView(ViewTechnologies.column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }),\n    name: \"Show columns\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(AppsIcon, {\n      onClick: () => setView(ViewTechnologies.row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }),\n    name: \"Show rows\"\n  }];\n  return /*#__PURE__*/React.createElement(SectionComponent, {\n    title: \"Technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, technologies.map(tech => /*#__PURE__*/React.createElement(TechnologyDetails, {\n    key: tech.id,\n    tech: tech,\n    remove: remove,\n    view: view,\n    action: action,\n    handleOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(SpeedDialComponent, {\n    actions: actions,\n    blocked: action,\n    unBlock: handleInactivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TechnologyForm, {\n    open: Boolean(edit),\n    technology: typeof edit === \"object\" ? edit : undefined,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n});\nexport default Technologies;","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx"],"names":["React","useContext","useEffect","useState","observer","AppsIcon","ViewStreamIcon","EditIcon","AddIcon","Grid","StoreTechnologiesContext","SectionComponent","SpeedDialComponent","TechnologyForm","TechnologyDetails","ViewTechnologies","Technologies","technologiesStore","technologies","fetch","remove","edit","setEdit","action","setAction","view","setView","column","handleInactivate","handleActivate","handleClose","handleOpen","technology","actions","icon","name","row","map","tech","id","Boolean","undefined"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { Paper } from \"@material-ui/core\";\n\nimport {\n  StoreTechnologiesContext,\n  Technology,\n} from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport TechnologyForm from \"./form\";\nimport styled from \"styled-components\";\nimport { parseStyledBoolean } from \"../../../models/global\";\nimport logo from \"../../../images/react_logo.png\";\nimport TechnologyDetails from \"./TechnologyDetails\";\n\nexport enum ViewTechnologies {\n  column = \"column\",\n  row = \"row\",\n}\n\nconst Technologies: React.FC = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const { technologies, fetch, remove } = technologiesStore;\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  const [edit, setEdit] = useState<Technology | boolean>();\n  const [action, setAction] = useState<boolean>(false);\n  const [view, setView] = useState<ViewTechnologies>(ViewTechnologies.column);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setEdit(false);\n  };\n\n  const handleOpen = (technology?: Technology) => {\n    setEdit(technology ? technology : true);\n  };\n\n  const actions = [\n    { icon: <AddIcon onClick={() => handleOpen()} />, name: \"Add\" },\n    { icon: <EditIcon onClick={handleActivate} />, name: \"Edit\" },\n    {\n      icon: <ViewStreamIcon onClick={() => setView(ViewTechnologies.column)} />,\n      name: \"Show columns\",\n    },\n    {\n      icon: <AppsIcon onClick={() => setView(ViewTechnologies.row)} />,\n      name: \"Show rows\",\n    },\n  ];\n\n  return (\n    <SectionComponent title={\"Technologies\"}>\n      <Grid container spacing={2} alignItems=\"center\" justify=\"space-around\">\n        {technologies.map((tech) => (\n          <TechnologyDetails\n            key={tech.id}\n            tech={tech}\n            remove={remove}\n            view={view}\n            action={action}\n            handleOpen\n          />\n        ))}\n      </Grid>\n      <SpeedDialComponent\n        actions={actions}\n        blocked={action}\n        unBlock={handleInactivate}\n      />\n      <TechnologyForm\n        open={Boolean(edit)}\n        technology={typeof edit === \"object\" ? edit : undefined}\n        handleClose={handleClose}\n      />\n    </SectionComponent>\n  );\n});\n\nexport default Technologies;\n"]},"metadata":{},"sourceType":"module"}