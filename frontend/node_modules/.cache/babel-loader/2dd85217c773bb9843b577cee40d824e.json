{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { decorate, action, observable } from \"mobx\";\nconst apiUrl = \"http://localhost:1300/api\";\nexport class Technology {\n  constructor({\n    _id,\n    name,\n    description\n  }) {\n    this.id = void 0;\n    this.name = void 0;\n    this.description = void 0;\n    this.logo = void 0;\n    this.id = _id;\n    this.name = name;\n    this.description = description;\n  }\n\n}\ndecorate(Technology, {\n  name: observable,\n  description: observable\n});\n\nclass TechnologiesStore {\n  constructor() {\n    this.technologies = [];\n\n    this.fetch = async () => {\n      const data = await axios.get(`${apiUrl}/technologies`);\n      const technology = data.data;\n      this.technologies = technology.map(tech => new Technology({\n        _id: tech._id,\n        name: tech.name,\n        description: tech.description\n      }));\n    };\n\n    this.add = async technology => {\n      const data = await axios.post(`${apiUrl}/technologies`, {\n        name: technology.name,\n        description: technology.description,\n        logo: technology.logo\n      });\n      console.log(data);\n      this.technologies = [...this.technologies, new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description,\n        logo: data.data.logo\n      })];\n    };\n\n    this.update = async technology => {\n      const data = await axios.put(`${apiUrl}/technologies/${technology.id}`, {\n        name: technology.name,\n        description: technology.description\n      });\n      this.technologies = this.technologies.map(tech => tech.id === data.data._id ? new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description\n      }) : tech);\n    };\n\n    this.remove = async techId => {\n      try {\n        const data = await axios.delete(`${apiUrl}/technologies/${techId}`);\n        this.technologies = this.technologies.filter(tech => tech.id !== data.data._id);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action,\n  update: action,\n  remove: action\n});\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StoreTechnologiesContext.Provider, {\n    value: storeTechnologies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx"],"names":["React","axios","decorate","action","observable","apiUrl","Technology","constructor","_id","name","description","id","logo","TechnologiesStore","technologies","fetch","data","get","technology","map","tech","add","post","console","log","update","put","remove","techId","delete","filter","err","storeTechnologies","StoreTechnologiesContext","createContext","StoreTechnologiesProvider","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport { decorate, action, observable } from \"mobx\";\nimport { Id } from \"../models/types\";\n\nconst apiUrl = \"http://localhost:1300/api\";\n\ntype TechnologyType = {\n  _id: Id;\n  name: string;\n  description?: string;\n  logo?: any;\n};\n\ntype TechnologyCreationType = Omit<Technology, \"id\">;\n\nexport class Technology {\n  id: Id;\n  name: string;\n  description?: string;\n  logo?: any;\n\n  constructor({ _id, name, description }: TechnologyType) {\n    this.id = _id;\n    this.name = name;\n    this.description = description;\n  }\n}\n\ndecorate(Technology, {\n  name: observable,\n  description: observable,\n});\n\nclass TechnologiesStore {\n  technologies: Technology[] = [];\n\n  fetch = async () => {\n    const data = await axios.get(`${apiUrl}/technologies`);\n    const technology = data.data;\n    this.technologies = technology.map(\n      (tech: any) =>\n        new Technology({\n          _id: tech._id,\n          name: tech.name,\n          description: tech.description,\n        })\n    );\n  };\n\n  add = async (technology: TechnologyCreationType) => {\n    const data = await axios.post<TechnologyType>(`${apiUrl}/technologies`, {\n      name: technology.name,\n      description: technology.description,\n      logo: technology.logo,\n    });\n    console.log(data);\n    this.technologies = [\n      ...this.technologies,\n      new Technology({\n        _id: data.data._id,\n        name: data.data.name,\n        description: data.data.description,\n        logo: data.data.logo,\n      }),\n    ];\n  };\n\n  update = async (technology: Technology) => {\n    const data = await axios.put<TechnologyType>(\n      `${apiUrl}/technologies/${technology.id}`,\n      {\n        name: technology.name,\n        description: technology.description,\n      }\n    );\n    this.technologies = this.technologies.map((tech) =>\n      tech.id === data.data._id\n        ? new Technology({\n            _id: data.data._id,\n            name: data.data.name,\n            description: data.data.description,\n          })\n        : tech\n    );\n  };\n\n  remove = async (techId: Id) => {\n    try {\n      const data = await axios.delete<TechnologyType>(\n        `${apiUrl}/technologies/${techId}`\n      );\n      this.technologies = this.technologies.filter(\n        (tech) => tech.id !== data.data._id\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action,\n  update: action,\n  remove: action,\n});\n\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider: React.FC<{}> = ({ children }) => {\n  return (\n    <StoreTechnologiesContext.Provider value={storeTechnologies}>\n      {children}\n    </StoreTechnologiesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}