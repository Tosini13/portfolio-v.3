{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { decorate, action, observable } from \"mobx\";\nconst apiUrl = \"http://localhost:1300/api\";\n\nclass Technology {\n  constructor({\n    id: string,\n    name,\n    description\n  }) {\n    this.id = void 0;\n    this.name = void 0;\n    this.description = void 0;\n    this.id = id;\n    this.name = name;\n    this.description = description;\n  }\n\n}\n\ndecorate(Technology, {\n  name: observable,\n  description: observable\n});\n\nclass TechnologiesStore {\n  constructor() {\n    this.technologies = [];\n\n    this.fetch = async () => {\n      const data = await axios.get(`${apiUrl}/technologies`);\n      const technology = data.data;\n      this.technologies = technology.map(tech => new Technology(tech._id, tech.name, tech.description));\n    };\n\n    this.add = async technology => {\n      const tech = new Technology(`${name}`, name, description);\n      const data = await axios.post(`${apiUrl}/technologies`, technology);\n      this.technologies = [...this.technologies, tech];\n    };\n  }\n\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action\n});\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StoreTechnologiesContext.Provider, {\n    value: storeTechnologies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/store/technology.tsx"],"names":["React","axios","decorate","action","observable","apiUrl","Technology","constructor","id","string","name","description","TechnologiesStore","technologies","fetch","data","get","technology","map","tech","_id","add","post","storeTechnologies","StoreTechnologiesContext","createContext","StoreTechnologiesProvider","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,UAA3B,QAA6C,MAA7C;AAEA,MAAMC,MAAM,GAAG,2BAAf;;AAUA,MAAMC,UAAN,CAAiB;AAKfC,EAAAA,WAAW,CAAC;AAACC,IAAAA,EAAE,EAAEC,MAAL;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,GAAD,EAAkC;AAAA,SAJ7CH,EAI6C;AAAA,SAH7CE,IAG6C;AAAA,SAF7CC,WAE6C;AAC3C,SAAKH,EAAL,GAAUA,EAAV;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AATc;;AAYjBT,QAAQ,CAACI,UAAD,EAAa;AACnBI,EAAAA,IAAI,EAAEN,UADa;AAEnBO,EAAAA,WAAW,EAAEP;AAFM,CAAb,CAAR;;AAKA,MAAMQ,iBAAN,CAAwB;AAAA;AAAA,SACtBC,YADsB,GACO,EADP;;AAAA,SAGtBC,KAHsB,GAGd,YAAY;AAClB,YAAMC,IAAI,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEX,MAAO,eAApB,CAAnB;AACA,YAAMY,UAAU,GAAGF,IAAI,CAACA,IAAxB;AACA,WAAKF,YAAL,GAAoBI,UAAU,CAACC,GAAX,CACjBC,IAAD,IAAe,IAAIb,UAAJ,CAAea,IAAI,CAACC,GAApB,EAAyBD,IAAI,CAACT,IAA9B,EAAoCS,IAAI,CAACR,WAAzC,CADG,CAApB;AAGD,KATqB;;AAAA,SAWtBU,GAXsB,GAWhB,MAAOJ,UAAP,IAA8C;AAClD,YAAME,IAAgB,GAAG,IAAIb,UAAJ,CAAgB,GAAEI,IAAK,EAAvB,EAA0BA,IAA1B,EAAgCC,WAAhC,CAAzB;AACA,YAAMI,IAAI,GAAG,MAAMd,KAAK,CAACqB,IAAN,CAAY,GAAEjB,MAAO,eAArB,EAAqCY,UAArC,CAAnB;AACA,WAAKJ,YAAL,GAAoB,CAAC,GAAG,KAAKA,YAAT,EAAuBM,IAAvB,CAApB;AACD,KAfqB;AAAA;;AAAA;;AAkBxBjB,QAAQ,CAACU,iBAAD,EAAoB;AAC1BC,EAAAA,YAAY,EAAET,UADY;AAE1BU,EAAAA,KAAK,EAAEV,UAFmB;AAG1BiB,EAAAA,GAAG,EAAElB;AAHqB,CAApB,CAAR;AAMA,MAAMoB,iBAAiB,GAAG,IAAIX,iBAAJ,EAA1B;AACA,OAAO,MAAMY,wBAAwB,GAAGxB,KAAK,CAACyB,aAAN,CAAoBF,iBAApB,CAAjC;AACP,OAAO,MAAMG,yBAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvE,sBACE,oBAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEJ,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QADH,CADF;AAKD,CANM","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport { decorate, action, observable } from \"mobx\";\n\nconst apiUrl = \"http://localhost:1300/api\";\n\ntype TechnologyType = {\n  id: string;\n  name: string;\n  description?: string;\n};\n\ntype TechnologyCreationtype = Omit<Technology, \"id\">\n\nclass Technology {\n  id: string;\n  name: string;\n  description?: string;\n\n  constructor({id: string, name, description}) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n  }\n}\n\ndecorate(Technology, {\n  name: observable,\n  description: observable,\n});\n\nclass TechnologiesStore {\n  technologies: Technology[] = [];\n\n  fetch = async () => {\n    const data = await axios.get(`${apiUrl}/technologies`);\n    const technology = data.data;\n    this.technologies = technology.map(\n      (tech: any) => new Technology(tech._id, tech.name, tech.description)\n    );\n  };\n\n  add = async (technology: TechnologyCreationtype) => {\n    const tech: Technology = new Technology(`${name}`, name, description);\n    const data = await axios.post(`${apiUrl}/technologies`, technology);\n    this.technologies = [...this.technologies, tech];\n  };\n}\n\ndecorate(TechnologiesStore, {\n  technologies: observable,\n  fetch: observable,\n  add: action,\n});\n\nconst storeTechnologies = new TechnologiesStore();\nexport const StoreTechnologiesContext = React.createContext(storeTechnologies);\nexport const StoreTechnologiesProvider: React.FC<{}> = ({ children }) => {\n  return (\n    <StoreTechnologiesContext.Provider value={storeTechnologies}>\n      {children}\n    </StoreTechnologiesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}