{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Button, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport { StoreTechnologiesContext } from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport CreateTechnology from \"./create\";\nimport styled from \"styled-components\";\nconst ActionStyled = styled(ListItemSecondaryAction)`\n  ${props => props.active ? `display: block` : `display: none`}\n`;\nconst ButtonActionStyled = styled(Button)`\n  position: absolute;\n  top: 20px;\n  right: 80px;\n  ${props => props.active ? `display: block` : `display: none`}\n`;\nconst Technologies = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const {\n    technologies,\n    fetch,\n    remove\n  } = technologiesStore;\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n  const [open, setOpen] = useState(false);\n  const [action, setAction] = useState(false);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const actions = [{\n    icon: /*#__PURE__*/React.createElement(AddIcon, {\n      onClick: handleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }),\n    name: \"Add\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      onClick: handleActivate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }),\n    name: \"Edit\"\n  }];\n  return /*#__PURE__*/React.createElement(SectionComponent, {\n    title: \"Technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonActionStyled, {\n    active: Boolean(action) ? true : undefined,\n    onClick: handleInactivate,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, technologies.map(tech => /*#__PURE__*/React.createElement(ListItem, {\n    key: tech.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: tech.name,\n    secondary: tech.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionStyled, {\n    active: Boolean(action),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => remove(tech.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(SpeedDialComponent, {\n    actions: actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateTechnology, {\n    open: open,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n});\nexport default Technologies;","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx"],"names":["React","useContext","useEffect","useState","observer","DeleteForeverIcon","EditIcon","AddIcon","Button","IconButton","List","ListItem","ListItemSecondaryAction","ListItemText","StoreTechnologiesContext","SectionComponent","SpeedDialComponent","CreateTechnology","styled","ActionStyled","props","active","ButtonActionStyled","Technologies","technologiesStore","technologies","fetch","remove","open","setOpen","action","setAction","handleInactivate","handleActivate","handleClose","handleOpen","actions","icon","name","Boolean","undefined","map","tech","id","description"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport { StoreTechnologiesContext } from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport CreateTechnology from \"./create\";\nimport styled from \"styled-components\";\n\nconst ActionStyled = styled(ListItemSecondaryAction)<{ active?: boolean }>`\n  ${(props) => (props.active ? `display: block` : `display: none`)}\n`;\n\nconst ButtonActionStyled = styled(Button)<{ active?: boolean }>`\n  position: absolute;\n  top: 20px;\n  right: 80px;\n  ${(props) => (props.active ? `display: block` : `display: none`)}\n`;\n\nconst Technologies: React.FC = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const { technologies, fetch, remove } = technologiesStore;\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [action, setAction] = useState<boolean>(false);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const actions = [\n    { icon: <AddIcon onClick={handleOpen} />, name: \"Add\" },\n    { icon: <EditIcon onClick={handleActivate} />, name: \"Edit\" },\n  ];\n\n  return (\n    <SectionComponent title={\"Technologies\"}>\n      <ButtonActionStyled\n        active={Boolean(action) ? true : undefined}\n        onClick={handleInactivate}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Done\n      </ButtonActionStyled>\n      <List>\n        {technologies.map((tech) => (\n          <ListItem key={tech.id}>\n            <ListItemText primary={tech.name} secondary={tech.description} />\n            <ActionStyled active={Boolean(action)}>\n              <IconButton>\n                <EditIcon />\n              </IconButton>\n              <IconButton onClick={() => remove(tech.id)}>\n                <DeleteForeverIcon />\n              </IconButton>\n            </ActionStyled>\n          </ListItem>\n        ))}\n      </List>\n      <SpeedDialComponent actions={actions} />\n      <CreateTechnology open={open} handleClose={handleClose} />\n    </SectionComponent>\n  );\n});\n\nexport default Technologies;\n"]},"metadata":{},"sourceType":"module"}