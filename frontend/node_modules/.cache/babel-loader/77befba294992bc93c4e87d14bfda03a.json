{"ast":null,"code":"var _jsxFileName = \"/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, ListItemSecondaryAction, Typography } from \"@material-ui/core\";\nimport { StoreTechnologiesContext } from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport TechnologyForm from \"./form\";\nimport styled from \"styled-components\";\nvar GridDirection;\n\n(function (GridDirection) {\n  GridDirection[\"column\"] = \"column\";\n  GridDirection[\"row\"] = \"row\";\n  GridDirection[\"rowReverse\"] = \"row-reverse\";\n  GridDirection[\"columnReverse\"] = \"column-reverse\";\n})(GridDirection || (GridDirection = {}));\n\nvar View;\n\n(function (View) {\n  View[\"column\"] = \"column\";\n  View[\"row\"] = \"row\";\n})(View || (View = {}));\n\nconst gridView = {\n  column: {\n    container: {\n      direction: \"column\",\n      spacing: 3\n    }\n  },\n  row: {\n    container: {\n      direction: \"row\",\n      spacing: 3\n    }\n  }\n};\nconst ActionStyled = styled(ListItemSecondaryAction)`\n  ${props => props.active ? `display: block` : `display: none`}\n`;\nconst Technologies = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const {\n    technologies,\n    fetch,\n    remove\n  } = technologiesStore;\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n  const [edit, setEdit] = useState();\n  const [action, setAction] = useState(false);\n  const [view, setView] = useState(View.column);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setEdit(false);\n  };\n\n  const handleOpen = technology => {\n    setEdit(technology ? technology : true);\n  };\n\n  const getView = () => {\n    if (view === View.row) {\n      return gridView.row;\n    }\n  };\n\n  const actions = [{\n    icon: /*#__PURE__*/React.createElement(AddIcon, {\n      onClick: () => handleOpen(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }),\n    name: \"Add\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      onClick: handleActivate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }),\n    name: \"Edit\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      onClick: () => setView(View.column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }),\n    name: \"Show columns\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      onClick: () => setView(View.row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }),\n    name: \"Show rows\"\n  }];\n  return /*#__PURE__*/React.createElement(SectionComponent, {\n    title: \"Technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: gridView[view].container.direction,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, technologies.map(tech => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: tech.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      border: \"black solid 1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, tech.name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, tech.description)))))), /*#__PURE__*/React.createElement(SpeedDialComponent, {\n    actions: actions,\n    blocked: action,\n    unBlock: handleInactivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TechnologyForm, {\n    open: Boolean(edit),\n    technology: typeof edit === \"object\" ? edit : undefined,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n});\nexport default Technologies;","map":{"version":3,"sources":["/home/jbubuntu/workspace/private/React/portfolio/src/components/main/technologies/index.tsx"],"names":["React","useContext","useEffect","useState","observer","EditIcon","AddIcon","Grid","ListItemSecondaryAction","Typography","StoreTechnologiesContext","SectionComponent","SpeedDialComponent","TechnologyForm","styled","GridDirection","View","gridView","column","container","direction","spacing","row","ActionStyled","props","active","Technologies","technologiesStore","technologies","fetch","remove","edit","setEdit","action","setAction","view","setView","handleInactivate","handleActivate","handleClose","handleOpen","technology","getView","actions","icon","name","map","tech","id","border","description","Boolean","undefined"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  StoreTechnologiesContext,\n  Technology,\n} from \"../../../store/technology\";\nimport SectionComponent from \"../Section\";\nimport SpeedDialComponent from \"../../global/SpeedDial\";\nimport TechnologyForm from \"./form\";\nimport styled from \"styled-components\";\nimport { parseStyledBoolean } from \"../../../models/global\";\n\nenum GridDirection {\n  column = \"column\",\n  row = \"row\",\n  rowReverse = \"row-reverse\",\n  columnReverse = \"column-reverse\",\n}\n\nenum View {\n  column = \"column\",\n  row = \"row\",\n}\n\nconst gridView = {\n  column: {\n    container: {\n      direction: \"column\" as GridDirection,\n      spacing: 3,\n    },\n  },\n  row: {\n    container: {\n      direction: \"row\" as GridDirection,\n      spacing: 3,\n    },\n  },\n};\n\nconst ActionStyled = styled(ListItemSecondaryAction)<{ active?: string }>`\n  ${(props) => (props.active ? `display: block` : `display: none`)}\n`;\n\nconst Technologies: React.FC = observer(() => {\n  const technologiesStore = useContext(StoreTechnologiesContext);\n  const { technologies, fetch, remove } = technologiesStore;\n\n  useEffect(() => {\n    fetch();\n  }, [fetch]);\n\n  const [edit, setEdit] = useState<Technology | boolean>();\n  const [action, setAction] = useState<boolean>(false);\n  const [view, setView] = useState<View>(View.column);\n\n  const handleInactivate = () => {\n    setAction(false);\n  };\n\n  const handleActivate = () => {\n    setAction(true);\n  };\n\n  const handleClose = () => {\n    setEdit(false);\n  };\n\n  const handleOpen = (technology?: Technology) => {\n    setEdit(technology ? technology : true);\n  };\n\n  const getView = () => {\n    if (view === View.row) {\n      return gridView.row;\n    }\n  };\n\n  const actions = [\n    { icon: <AddIcon onClick={() => handleOpen()} />, name: \"Add\" },\n    { icon: <EditIcon onClick={handleActivate} />, name: \"Edit\" },\n    {\n      icon: <EditIcon onClick={() => setView(View.column)} />,\n      name: \"Show columns\",\n    },\n    { icon: <EditIcon onClick={() => setView(View.row)} />, name: \"Show rows\" },\n  ];\n\n  return (\n    <SectionComponent title={\"Technologies\"}>\n      {/* <List>\n        {technologies.map((tech) => (\n          <ListItem key={tech.id}>\n            <ListItemText primary={tech.name} secondary={tech.description} />\n            <ActionStyled active={parseStyledBoolean(action)}>\n              <IconButton onClick={() => handleOpen(tech)}>\n                <EditIcon />\n              </IconButton>\n              <IconButton onClick={() => remove(tech.id)}>\n                <DeleteForeverIcon />\n              </IconButton>\n            </ActionStyled>\n          </ListItem>\n        ))}\n      </List> */}\n      <Grid\n        container\n        direction={gridView[view].container.direction}\n        spacing={3}\n      >\n        {technologies.map((tech) => (\n          <Grid item key={tech.id}>\n            <Grid container spacing={2} style={{ border: \"black solid 1px\" }}>\n              <Grid item>\n                <Typography color=\"primary\" variant=\"h5\">\n                  {tech.name}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"primary\" variant=\"body1\">\n                  {tech.description}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n      <SpeedDialComponent\n        actions={actions}\n        blocked={action}\n        unBlock={handleInactivate}\n      />\n      <TechnologyForm\n        open={Boolean(edit)}\n        technology={typeof edit === \"object\" ? edit : undefined}\n        handleClose={handleClose}\n      />\n    </SectionComponent>\n  );\n});\n\nexport default Technologies;\n"]},"metadata":{},"sourceType":"module"}